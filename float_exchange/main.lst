
main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x1a3>
  400248:	78 38                	js     400282 <_init-0x196>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 e2                	add    dl,ah
  400285:	03 d0                	add    edx,eax
  400287:	d9 29                	fldcw  WORD PTR [rcx]
  400289:	15 90 ef 7d 25       	adc    eax,0x257def90
  40028e:	fe                   	(bad)  
  40028f:	22 1e                	and    bl,BYTE PTR [rsi]
  400291:	cd 6c                	int    0x6c
  400293:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400294:	3e                   	ds
  400295:	ff                   	.byte 0xff
  400296:	a1                   	.byte 0xa1
  400297:	42                   	rex.X

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	10 00                	adc    BYTE PTR [rax],al
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	17                   	(bad)  
  400301:	00 00                	add    BYTE PTR [rax],al
  400303:	00 12                	add    BYTE PTR [rdx],dl
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 29                	add    BYTE PTR [rcx],ch
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .dynstr:

0000000000400330 <.dynstr>:
  400330:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400334:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400336:	73 6f                	jae    4003a7 <_init-0x71>
  400338:	2e 36 00 70 75       	cs add BYTE PTR ss:[rax+0x75],dh
  40033d:	74 73                	je     4003b2 <_init-0x66>
  40033f:	00 70 72             	add    BYTE PTR [rax+0x72],dh
  400342:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
  400349:	6c                   	ins    BYTE PTR es:[rdi],dx
  40034a:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400351:	72 74                	jb     4003c7 <_init-0x51>
  400353:	5f                   	pop    rdi
  400354:	6d                   	ins    DWORD PTR es:[rdi],dx
  400355:	61                   	(bad)  
  400356:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  40035d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40035e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40035f:	5f                   	pop    rdi
  400360:	73 74                	jae    4003d6 <_init-0x42>
  400362:	61                   	(bad)  
  400363:	72 74                	jb     4003d9 <_init-0x3f>
  400365:	5f                   	pop    rdi
  400366:	5f                   	pop    rdi
  400367:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40036a:	49                   	rex.WB
  40036b:	42                   	rex.X
  40036c:	43 5f                	rex.XB pop r15
  40036e:	32 2e                	xor    ch,BYTE PTR [rsi]
  400370:	32 2e                	xor    ch,BYTE PTR [rsi]
  400372:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400374 <.gnu.version>:
  400374:	00 00                	add    BYTE PTR [rax],al
  400376:	02 00                	add    al,BYTE PTR [rax]
  400378:	02 00                	add    al,BYTE PTR [rax]
  40037a:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400380 <.gnu.version_r>:
  400380:	01 00                	add    DWORD PTR [rax],eax
  400382:	01 00                	add    DWORD PTR [rax],eax
  400384:	01 00                	add    DWORD PTR [rax],eax
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	10 00                	adc    BYTE PTR [rax],al
  40038a:	00 00                	add    BYTE PTR [rax],al
  40038c:	00 00                	add    BYTE PTR [rax],al
  40038e:	00 00                	add    BYTE PTR [rax],al
  400390:	75 1a                	jne    4003ac <_init-0x6c>
  400392:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400398:	38 00                	cmp    BYTE PTR [rax],al
  40039a:	00 00                	add    BYTE PTR [rax],al
  40039c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004003a0 <.rela.dyn>:
  4003a0:	f8                   	clc    
  4003a1:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  4003a4:	00 00                	add    BYTE PTR [rax],al
  4003a6:	00 00                	add    BYTE PTR [rax],al
  4003a8:	06                   	(bad)  
  4003a9:	00 00                	add    BYTE PTR [rax],al
  4003ab:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .rela.plt:

00000000004003b8 <.rela.plt>:
  4003b8:	18 10                	sbb    BYTE PTR [rax],dl
  4003ba:	60                   	(bad)  
  4003bb:	00 00                	add    BYTE PTR [rax],al
  4003bd:	00 00                	add    BYTE PTR [rax],al
  4003bf:	00 07                	add    BYTE PTR [rdi],al
  4003c1:	00 00                	add    BYTE PTR [rax],al
  4003c3:	00 01                	add    BYTE PTR [rcx],al
	...
  4003cd:	00 00                	add    BYTE PTR [rax],al
  4003cf:	00 20                	add    BYTE PTR [rax],ah
  4003d1:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003d4:	00 00                	add    BYTE PTR [rax],al
  4003d6:	00 00                	add    BYTE PTR [rax],al
  4003d8:	07                   	(bad)  
  4003d9:	00 00                	add    BYTE PTR [rax],al
  4003db:	00 02                	add    BYTE PTR [rdx],al
	...
  4003e5:	00 00                	add    BYTE PTR [rax],al
  4003e7:	00 28                	add    BYTE PTR [rax],ch
  4003e9:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003ec:	00 00                	add    BYTE PTR [rax],al
  4003ee:	00 00                	add    BYTE PTR [rax],al
  4003f0:	07                   	(bad)  
  4003f1:	00 00                	add    BYTE PTR [rax],al
  4003f3:	00 03                	add    BYTE PTR [rbx],al
	...
  4003fd:	00 00                	add    BYTE PTR [rax],al
  4003ff:	00 30                	add    BYTE PTR [rax],dh
  400401:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400404:	00 00                	add    BYTE PTR [rax],al
  400406:	00 00                	add    BYTE PTR [rax],al
  400408:	07                   	(bad)  
  400409:	00 00                	add    BYTE PTR [rax],al
  40040b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .init:

0000000000400418 <_init>:
  400418:	48 83 ec 08          	sub    rsp,0x8
  40041c:	48 8b 05 d5 0b 20 00 	mov    rax,QWORD PTR [rip+0x200bd5]        # 600ff8 <_DYNAMIC+0x1d0>
  400423:	48 85 c0             	test   rax,rax
  400426:	74 05                	je     40042d <_init+0x15>
  400428:	e8 53 00 00 00       	call   400480 <__gmon_start__@plt>
  40042d:	48 83 c4 08          	add    rsp,0x8
  400431:	c3                   	ret    

Disassembly of section .plt:

0000000000400440 <puts@plt-0x10>:
  400440:	ff 35 c2 0b 20 00    	push   QWORD PTR [rip+0x200bc2]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400446:	ff 25 c4 0b 20 00    	jmp    QWORD PTR [rip+0x200bc4]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40044c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400450 <puts@plt>:
  400450:	ff 25 c2 0b 20 00    	jmp    QWORD PTR [rip+0x200bc2]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400456:	68 00 00 00 00       	push   0x0
  40045b:	e9 e0 ff ff ff       	jmp    400440 <_init+0x28>

0000000000400460 <printf@plt>:
  400460:	ff 25 ba 0b 20 00    	jmp    QWORD PTR [rip+0x200bba]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400466:	68 01 00 00 00       	push   0x1
  40046b:	e9 d0 ff ff ff       	jmp    400440 <_init+0x28>

0000000000400470 <__libc_start_main@plt>:
  400470:	ff 25 b2 0b 20 00    	jmp    QWORD PTR [rip+0x200bb2]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400476:	68 02 00 00 00       	push   0x2
  40047b:	e9 c0 ff ff ff       	jmp    400440 <_init+0x28>

0000000000400480 <__gmon_start__@plt>:
  400480:	ff 25 aa 0b 20 00    	jmp    QWORD PTR [rip+0x200baa]        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400486:	68 03 00 00 00       	push   0x3
  40048b:	e9 b0 ff ff ff       	jmp    400440 <_init+0x28>

Disassembly of section .text:

0000000000400490 <_start>:
  400490:	31 ed                	xor    ebp,ebp
  400492:	49 89 d1             	mov    r9,rdx
  400495:	5e                   	pop    rsi
  400496:	48 89 e2             	mov    rdx,rsp
  400499:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40049d:	50                   	push   rax
  40049e:	54                   	push   rsp
  40049f:	49 c7 c0 a0 06 40 00 	mov    r8,0x4006a0
  4004a6:	48 c7 c1 30 06 40 00 	mov    rcx,0x400630
  4004ad:	48 c7 c7 a0 05 40 00 	mov    rdi,0x4005a0
  4004b4:	e8 b7 ff ff ff       	call   400470 <__libc_start_main@plt>
  4004b9:	f4                   	hlt    
  4004ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004004c0 <deregister_tm_clones>:
  4004c0:	b8 4f 10 60 00       	mov    eax,0x60104f
  4004c5:	55                   	push   rbp
  4004c6:	48 2d 48 10 60 00    	sub    rax,0x601048
  4004cc:	48 83 f8 0e          	cmp    rax,0xe
  4004d0:	48 89 e5             	mov    rbp,rsp
  4004d3:	76 1b                	jbe    4004f0 <deregister_tm_clones+0x30>
  4004d5:	b8 00 00 00 00       	mov    eax,0x0
  4004da:	48 85 c0             	test   rax,rax
  4004dd:	74 11                	je     4004f0 <deregister_tm_clones+0x30>
  4004df:	5d                   	pop    rbp
  4004e0:	bf 48 10 60 00       	mov    edi,0x601048
  4004e5:	ff e0                	jmp    rax
  4004e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4004ee:	00 00 
  4004f0:	5d                   	pop    rbp
  4004f1:	c3                   	ret    
  4004f2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4004f9:	1f 84 00 00 00 00 00 

0000000000400500 <register_tm_clones>:
  400500:	be 48 10 60 00       	mov    esi,0x601048
  400505:	55                   	push   rbp
  400506:	48 81 ee 48 10 60 00 	sub    rsi,0x601048
  40050d:	48 c1 fe 03          	sar    rsi,0x3
  400511:	48 89 e5             	mov    rbp,rsp
  400514:	48 89 f0             	mov    rax,rsi
  400517:	48 c1 e8 3f          	shr    rax,0x3f
  40051b:	48 01 c6             	add    rsi,rax
  40051e:	48 d1 fe             	sar    rsi,1
  400521:	74 15                	je     400538 <register_tm_clones+0x38>
  400523:	b8 00 00 00 00       	mov    eax,0x0
  400528:	48 85 c0             	test   rax,rax
  40052b:	74 0b                	je     400538 <register_tm_clones+0x38>
  40052d:	5d                   	pop    rbp
  40052e:	bf 48 10 60 00       	mov    edi,0x601048
  400533:	ff e0                	jmp    rax
  400535:	0f 1f 00             	nop    DWORD PTR [rax]
  400538:	5d                   	pop    rbp
  400539:	c3                   	ret    
  40053a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400540 <__do_global_dtors_aux>:
  400540:	80 3d 01 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b01],0x0        # 601048 <__TMC_END__>
  400547:	75 11                	jne    40055a <__do_global_dtors_aux+0x1a>
  400549:	55                   	push   rbp
  40054a:	48 89 e5             	mov    rbp,rsp
  40054d:	e8 6e ff ff ff       	call   4004c0 <deregister_tm_clones>
  400552:	5d                   	pop    rbp
  400553:	c6 05 ee 0a 20 00 01 	mov    BYTE PTR [rip+0x200aee],0x1        # 601048 <__TMC_END__>
  40055a:	f3 c3                	repz ret 
  40055c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400560 <frame_dummy>:
  400560:	bf 20 0e 60 00       	mov    edi,0x600e20
  400565:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400569:	75 05                	jne    400570 <frame_dummy+0x10>
  40056b:	eb 93                	jmp    400500 <register_tm_clones>
  40056d:	0f 1f 00             	nop    DWORD PTR [rax]
  400570:	b8 00 00 00 00       	mov    eax,0x0
  400575:	48 85 c0             	test   rax,rax
  400578:	74 f1                	je     40056b <frame_dummy+0xb>
  40057a:	55                   	push   rbp
  40057b:	48 89 e5             	mov    rbp,rsp
  40057e:	ff d0                	call   rax
  400580:	5d                   	pop    rbp
  400581:	e9 7a ff ff ff       	jmp    400500 <register_tm_clones>

0000000000400586 <sumoftwo_c>:
  400586:	55                   	push   rbp
  400587:	48 89 e5             	mov    rbp,rsp
  40058a:	f3 0f 11 45 fc       	movss  DWORD PTR [rbp-0x4],xmm0
  40058f:	f3 0f 11 4d f8       	movss  DWORD PTR [rbp-0x8],xmm1
  400594:	f3 0f 10 45 fc       	movss  xmm0,DWORD PTR [rbp-0x4]
  400599:	f3 0f 58 45 f8       	addss  xmm0,DWORD PTR [rbp-0x8]
  40059e:	5d                   	pop    rbp
  40059f:	c3                   	ret    

00000000004005a0 <main>:
  4005a0:	55                   	push   rbp
  4005a1:	48 89 e5             	mov    rbp,rsp
  4005a4:	48 83 ec 10          	sub    rsp,0x10
  4005a8:	bf b4 06 40 00       	mov    edi,0x4006b4
  4005ad:	e8 9e fe ff ff       	call   400450 <puts@plt>
  4005b2:	f3 0f 10 0d 12 01 00 	movss  xmm1,DWORD PTR [rip+0x112]        # 4006cc <_IO_stdin_used+0x1c>
  4005b9:	00 
  4005ba:	f3 0f 10 05 0e 01 00 	movss  xmm0,DWORD PTR [rip+0x10e]        # 4006d0 <_IO_stdin_used+0x20>
  4005c1:	00 
  4005c2:	e8 bf ff ff ff       	call   400586 <sumoftwo_c>
  4005c7:	66 0f 7e c0          	movd   eax,xmm0
  4005cb:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  4005ce:	f3 0f 10 0d fe 00 00 	movss  xmm1,DWORD PTR [rip+0xfe]        # 4006d4 <_IO_stdin_used+0x24>
  4005d5:	00 
  4005d6:	f3 0f 10 05 fa 00 00 	movss  xmm0,DWORD PTR [rip+0xfa]        # 4006d8 <_IO_stdin_used+0x28>
  4005dd:	00 
  4005de:	e8 3f 00 00 00       	call   400622 <sumoftwo_asm>
  4005e3:	66 0f 7e c0          	movd   eax,xmm0
  4005e7:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  4005ea:	f3 0f 5a 4d fc       	cvtss2sd xmm1,DWORD PTR [rbp-0x4]
  4005ef:	f3 0f 5a 45 f8       	cvtss2sd xmm0,DWORD PTR [rbp-0x8]
  4005f4:	bf c1 06 40 00       	mov    edi,0x4006c1
  4005f9:	b8 02 00 00 00       	mov    eax,0x2
  4005fe:	e8 5d fe ff ff       	call   400460 <printf@plt>
  400603:	c9                   	leave  
  400604:	c3                   	ret    
  400605:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40060c:	00 00 00 
  40060f:	90                   	nop

0000000000400610 <maxofthree>:
  400610:	48 89 f8             	mov    rax,rdi
  400613:	48 39 f0             	cmp    rax,rsi
  400616:	48 0f 4c c6          	cmovl  rax,rsi
  40061a:	48 39 d0             	cmp    rax,rdx
  40061d:	48 0f 4c c2          	cmovl  rax,rdx
  400621:	c3                   	ret    

0000000000400622 <sumoftwo_asm>:
  400622:	48 89 f8             	mov    rax,rdi
  400625:	48 89 f3             	mov    rbx,rsi
  400628:	48 01 d8             	add    rax,rbx
  40062b:	c3                   	ret    
  40062c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400630 <__libc_csu_init>:
  400630:	41 57                	push   r15
  400632:	41 89 ff             	mov    r15d,edi
  400635:	41 56                	push   r14
  400637:	49 89 f6             	mov    r14,rsi
  40063a:	41 55                	push   r13
  40063c:	49 89 d5             	mov    r13,rdx
  40063f:	41 54                	push   r12
  400641:	4c 8d 25 c8 07 20 00 	lea    r12,[rip+0x2007c8]        # 600e10 <__frame_dummy_init_array_entry>
  400648:	55                   	push   rbp
  400649:	48 8d 2d c8 07 20 00 	lea    rbp,[rip+0x2007c8]        # 600e18 <__init_array_end>
  400650:	53                   	push   rbx
  400651:	4c 29 e5             	sub    rbp,r12
  400654:	31 db                	xor    ebx,ebx
  400656:	48 c1 fd 03          	sar    rbp,0x3
  40065a:	48 83 ec 08          	sub    rsp,0x8
  40065e:	e8 b5 fd ff ff       	call   400418 <_init>
  400663:	48 85 ed             	test   rbp,rbp
  400666:	74 1e                	je     400686 <__libc_csu_init+0x56>
  400668:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40066f:	00 
  400670:	4c 89 ea             	mov    rdx,r13
  400673:	4c 89 f6             	mov    rsi,r14
  400676:	44 89 ff             	mov    edi,r15d
  400679:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40067d:	48 83 c3 01          	add    rbx,0x1
  400681:	48 39 eb             	cmp    rbx,rbp
  400684:	75 ea                	jne    400670 <__libc_csu_init+0x40>
  400686:	48 83 c4 08          	add    rsp,0x8
  40068a:	5b                   	pop    rbx
  40068b:	5d                   	pop    rbp
  40068c:	41 5c                	pop    r12
  40068e:	41 5d                	pop    r13
  400690:	41 5e                	pop    r14
  400692:	41 5f                	pop    r15
  400694:	c3                   	ret    
  400695:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40069c:	00 00 00 00 

00000000004006a0 <__libc_csu_fini>:
  4006a0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000004006a4 <_fini>:
  4006a4:	48 83 ec 08          	sub    rsp,0x8
  4006a8:	48 83 c4 08          	add    rsp,0x8
  4006ac:	c3                   	ret    

Disassembly of section .rodata:

00000000004006b0 <_IO_stdin_used>:
  4006b0:	01 00                	add    DWORD PTR [rax],eax
  4006b2:	02 00                	add    al,BYTE PTR [rax]
  4006b4:	48                   	rex.W
  4006b5:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  4006b7:	6c                   	ins    BYTE PTR es:[rdi],dx
  4006b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4006b9:	20 57 6f             	and    BYTE PTR [rdi+0x6f],dl
  4006bc:	72 6c                	jb     40072a <_IO_stdin_used+0x7a>
  4006be:	64 21 00             	and    DWORD PTR fs:[rax],eax
  4006c1:	25 66 2c 20 25       	and    eax,0x25202c66
  4006c6:	66 20 0a             	data16 and BYTE PTR [rdx],cl
  4006c9:	00 00                	add    BYTE PTR [rax],al
  4006cb:	00 66 66             	add    BYTE PTR [rsi+0x66],ah
  4006ce:	86 40 9a             	xchg   BYTE PTR [rax-0x66],al
  4006d1:	99                   	cdq    
  4006d2:	59                   	pop    rcx
  4006d3:	40                   	rex
  4006d4:	66 66 96             	data16 xchg si,ax
  4006d7:	40 cd cc             	rex int 0xcc
  4006da:	4c                   	rex.WR
  4006db:	40                   	rex

Disassembly of section .eh_frame_hdr:

00000000004006dc <.eh_frame_hdr>:
  4006dc:	01 1b                	add    DWORD PTR [rbx],ebx
  4006de:	03 3b                	add    edi,DWORD PTR [rbx]
  4006e0:	38 00                	cmp    BYTE PTR [rax],al
  4006e2:	00 00                	add    BYTE PTR [rax],al
  4006e4:	06                   	(bad)  
  4006e5:	00 00                	add    BYTE PTR [rax],al
  4006e7:	00 64 fd ff          	add    BYTE PTR [rbp+rdi*8-0x1],ah
  4006eb:	ff 84 00 00 00 b4 fd 	inc    DWORD PTR [rax+rax*1-0x24c0000]
  4006f2:	ff                   	(bad)  
  4006f3:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  4006f7:	00 aa fe ff ff ac    	add    BYTE PTR [rdx-0x53000002],ch
  4006fd:	00 00                	add    BYTE PTR [rax],al
  4006ff:	00 c4                	add    ah,al
  400701:	fe                   	(bad)  
  400702:	ff                   	(bad)  
  400703:	ff cc                	dec    esp
  400705:	00 00                	add    BYTE PTR [rax],al
  400707:	00 54 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],dl
  40070b:	ff                   	(bad)  
  40070c:	ec                   	in     al,dx
  40070d:	00 00                	add    BYTE PTR [rax],al
  40070f:	00 c4                	add    ah,al
  400711:	ff                   	(bad)  
  400712:	ff                   	(bad)  
  400713:	ff 34 01             	push   QWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

0000000000400718 <__FRAME_END__-0x110>:
  400718:	14 00                	adc    al,0x0
  40071a:	00 00                	add    BYTE PTR [rax],al
  40071c:	00 00                	add    BYTE PTR [rax],al
  40071e:	00 00                	add    BYTE PTR [rax],al
  400720:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400723:	00 01                	add    BYTE PTR [rcx],al
  400725:	78 10                	js     400737 <_IO_stdin_used+0x87>
  400727:	01 1b                	add    DWORD PTR [rbx],ebx
  400729:	0c 07                	or     al,0x7
  40072b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400731:	00 00                	add    BYTE PTR [rax],al
  400733:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400736:	00 00                	add    BYTE PTR [rax],al
  400738:	58                   	pop    rax
  400739:	fd                   	std    
  40073a:	ff                   	(bad)  
  40073b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400745:	00 00                	add    BYTE PTR [rax],al
  400747:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40074a:	00 00                	add    BYTE PTR [rax],al
  40074c:	00 00                	add    BYTE PTR [rax],al
  40074e:	00 00                	add    BYTE PTR [rax],al
  400750:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400753:	00 01                	add    BYTE PTR [rcx],al
  400755:	78 10                	js     400767 <_IO_stdin_used+0xb7>
  400757:	01 1b                	add    DWORD PTR [rbx],ebx
  400759:	0c 07                	or     al,0x7
  40075b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400761:	00 00                	add    BYTE PTR [rax],al
  400763:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400766:	00 00                	add    BYTE PTR [rax],al
  400768:	d8 fc                	fdivr  st,st(4)
  40076a:	ff                   	(bad)  
  40076b:	ff 50 00             	call   QWORD PTR [rax+0x0]
  40076e:	00 00                	add    BYTE PTR [rax],al
  400770:	00 0e                	add    BYTE PTR [rsi],cl
  400772:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400775:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400778:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40077b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40077e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400780:	2a 33                	sub    dh,BYTE PTR [rbx]
  400782:	24 22                	and    al,0x22
  400784:	00 00                	add    BYTE PTR [rax],al
  400786:	00 00                	add    BYTE PTR [rax],al
  400788:	1c 00                	sbb    al,0x0
  40078a:	00 00                	add    BYTE PTR [rax],al
  40078c:	44 00 00             	add    BYTE PTR [rax],r8b
  40078f:	00 f6                	add    dh,dh
  400791:	fd                   	std    
  400792:	ff                   	(bad)  
  400793:	ff 1a                	call   FWORD PTR [rdx]
  400795:	00 00                	add    BYTE PTR [rax],al
  400797:	00 00                	add    BYTE PTR [rax],al
  400799:	41 0e                	rex.B (bad) 
  40079b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4007a1:	55                   	push   rbp
  4007a2:	0c 07                	or     al,0x7
  4007a4:	08 00                	or     BYTE PTR [rax],al
  4007a6:	00 00                	add    BYTE PTR [rax],al
  4007a8:	1c 00                	sbb    al,0x0
  4007aa:	00 00                	add    BYTE PTR [rax],al
  4007ac:	64 00 00             	add    BYTE PTR fs:[rax],al
  4007af:	00 f0                	add    al,dh
  4007b1:	fd                   	std    
  4007b2:	ff                   	(bad)  
  4007b3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  4007b6:	00 00                	add    BYTE PTR [rax],al
  4007b8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4007bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4007c1:	02 60 0c             	add    ah,BYTE PTR [rax+0xc]
  4007c4:	07                   	(bad)  
  4007c5:	08 00                	or     BYTE PTR [rax],al
  4007c7:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  4007cb:	00 84 00 00 00 60 fe 	add    BYTE PTR [rax+rax*1-0x1a00000],al
  4007d2:	ff                   	(bad)  
  4007d3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  4007d6:	00 00                	add    BYTE PTR [rax],al
  4007d8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  4007db:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
  4007e1:	8e 03                	mov    es,WORD PTR [rbx]
  4007e3:	45 0e                	rex.RB (bad) 
  4007e5:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
  4007eb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701639 <_end+0xffffffff861005e9>
  4007f1:	06                   	(bad)  
  4007f2:	48 0e                	rex.W (bad) 
  4007f4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  4007fa:	6c                   	ins    BYTE PTR es:[rdi],dx
  4007fb:	0e                   	(bad)  
  4007fc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  4007ff:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400802:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400805:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400808:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40080b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40080e:	08 00                	or     BYTE PTR [rax],al
  400810:	14 00                	adc    al,0x0
  400812:	00 00                	add    BYTE PTR [rax],al
  400814:	cc                   	int3   
  400815:	00 00                	add    BYTE PTR [rax],al
  400817:	00 88 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],cl
	...

0000000000400828 <__FRAME_END__>:
  400828:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	60                   	(bad)  
  600e11:	05 40 00 00 00       	add    eax,0x40
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	40 05 40 00 00 00    	rex add eax,0x40
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	18 04 40             	sbb    BYTE PTR [rax+rax*2],al
  600e43:	00 00                	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 a4 06 40 00 00 00 	add    BYTE PTR [rsi+rax*1+0x40],ah
  600e56:	00 00                	add    BYTE PTR [rax],al
  600e58:	19 00                	sbb    DWORD PTR [rax],eax
  600e5a:	00 00                	add    BYTE PTR [rax],al
  600e5c:	00 00                	add    BYTE PTR [rax],al
  600e5e:	00 00                	add    BYTE PTR [rax],al
  600e60:	10 0e                	adc    BYTE PTR [rsi],cl
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 30                	add    BYTE PTR [rax],dh
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  600ed3:	00 00                	add    BYTE PTR [rax],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	60                   	(bad)  
  600f11:	00 00                	add    BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 b8 03 40 00 00    	add    BYTE PTR [rax+0x4003],bh
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 a0 03 40 00 00    	add    BYTE PTR [rax+0x4003],ah
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 80 03 40 00 00    	add    BYTE PTR [rax+0x4003],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 74 03 40          	add    BYTE PTR [rbx+rax*1+0x40],dh
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 56 04             	add    BYTE PTR [rsi+0x4],dl
  60101a:	40 00 00             	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 66 04             	add    BYTE PTR [rsi+0x4],ah
  601022:	40 00 00             	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 76 04             	add    BYTE PTR [rsi+0x4],dh
  60102a:	40 00 00             	add    BYTE PTR [rax],al
  60102d:	00 00                	add    BYTE PTR [rax],al
  60102f:	00 86 04 40 00 00    	add    BYTE PTR [rsi+0x4004],al
  601035:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601038 <__data_start>:
	...

0000000000601040 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601048 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x4003a0>
   a:	74 75                	je     81 <_init-0x400397>
   c:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
   f:	39 2e                	cmp    DWORD PTR [rsi],ebp
  11:	31 2d 31 36 75 62    	xor    DWORD PTR [rip+0x62753631],ebp        # 62753648 <_end+0x621525f8>
  17:	75 6e                	jne    87 <_init-0x400391>
  19:	74 75                	je     90 <_init-0x400388>
  1b:	36 29 20             	sub    DWORD PTR ss:[rax],esp
  1e:	34 2e                	xor    al,0x2e
  20:	39 2e                	cmp    DWORD PTR [rsi],ebp
  22:	31 00                	xor    DWORD PTR [rax],eax
  24:	47                   	rex.RXB
  25:	43                   	rex.XB
  26:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
  29:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
  2c:	75 6e                	jne    9c <_init-0x40037c>
  2e:	74 75                	je     a5 <_init-0x400373>
  30:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  33:	38 2e                	cmp    BYTE PTR [rsi],ch
  35:	33 2d 31 32 75 62    	xor    ebp,DWORD PTR [rip+0x62753231]        # 6275326c <_end+0x6215221c>
  3b:	75 6e                	jne    ab <_init-0x40036d>
  3d:	74 75                	je     b4 <_init-0x400364>
  3f:	33 29                	xor    ebp,DWORD PTR [rcx]
  41:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  44:	38 2e                	cmp    BYTE PTR [rsi],ch
  46:	33 00                	xor    eax,DWORD PTR [rax]

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	86 05 40 00 00 00    	xchg   BYTE PTR [rip+0x40],al        # 56 <_init-0x4003c2>
  16:	00 00                	add    BYTE PTR [rax],al
  18:	7f 00                	jg     1a <_init-0x4003fe>
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	e7 00                	out    0x0,eax
   2:	00 00                	add    BYTE PTR [rax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	0b 00                	or     eax,DWORD PTR [rax]
   e:	00 00                	add    BYTE PTR [rax],al
  10:	01 50 00             	add    DWORD PTR [rax+0x0],edx
  13:	00 00                	add    BYTE PTR [rax],al
  15:	69 00 00 00 86 05    	imul   eax,DWORD PTR [rax],0x5860000
  1b:	40 00 00             	add    BYTE PTR [rax],al
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 7f 00             	add    BYTE PTR [rdi+0x0],bh
	...
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	02 08                	add    cl,BYTE PTR [rax]
  2f:	07                   	(bad)  
  30:	57                   	push   rdi
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 02                	add    BYTE PTR [rdx],al
  35:	01 08                	add    DWORD PTR [rax],ecx
  37:	7f 00                	jg     39 <_init-0x4003df>
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	02 02                	add    al,BYTE PTR [rdx]
  3d:	07                   	(bad)  
  3e:	9b                   	fwait
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	00 02                	add    BYTE PTR [rdx],al
  43:	04 07                	add    al,0x7
  45:	5c                   	pop    rsp
  46:	00 00                	add    BYTE PTR [rax],al
  48:	00 02                	add    BYTE PTR [rdx],al
  4a:	01 06                	add    DWORD PTR [rsi],eax
  4c:	81 00 00 00 02 02    	add    DWORD PTR [rax],0x2020000
  52:	05 b4 00 00 00       	add    eax,0xb4
  57:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
  5e:	02 08                	add    cl,BYTE PTR [rax]
  60:	05 92 00 00 00       	add    eax,0x92
  65:	02 08                	add    cl,BYTE PTR [rax]
  67:	07                   	(bad)  
  68:	be 00 00 00 02       	mov    esi,0x2000000
  6d:	01 06                	add    DWORD PTR [rsi],eax
  6f:	88 00                	mov    BYTE PTR [rax],al
  71:	00 00                	add    BYTE PTR [rax],al
  73:	04 00                	add    al,0x0
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 01                	add    BYTE PTR [rcx],al
  79:	09 ad 00 00 00 86    	or     DWORD PTR [rbp-0x7a000000],ebp
  7f:	05 40 00 00 00       	add    eax,0x40
  84:	00 00                	add    BYTE PTR [rax],al
  86:	1a 00                	sbb    al,BYTE PTR [rax]
  88:	00 00                	add    BYTE PTR [rax],al
  8a:	00 00                	add    BYTE PTR [rax],al
  8c:	00 00                	add    BYTE PTR [rax],al
  8e:	01 9c ad 00 00 00 05 	add    DWORD PTR [rbp+rbp*4+0x5000000],ebx
  95:	61                   	(bad)  
  96:	00 01                	add    BYTE PTR [rcx],al
  98:	09 ad 00 00 00 02    	or     DWORD PTR [rbp+0x2000000],ebp
  9e:	91                   	xchg   ecx,eax
  9f:	6c                   	ins    BYTE PTR es:[rdi],dx
  a0:	05 62 00 01 09       	add    eax,0x9010062
  a5:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	00 02                	add    BYTE PTR [rdx],al
  aa:	91                   	xchg   ecx,eax
  ab:	68 00 02 04 04       	push   0x4040200
  b0:	ae                   	scas   al,BYTE PTR es:[rdi]
  b1:	00 00                	add    BYTE PTR [rax],al
  b3:	00 06                	add    BYTE PTR [rsi],al
  b5:	8d 00                	lea    eax,[rax]
  b7:	00 00                	add    BYTE PTR [rax],al
  b9:	01 0e                	add    DWORD PTR [rsi],ecx
  bb:	a0 05 40 00 00 00 00 	movabs al,ds:0x6500000000004005
  c2:	00 65 
  c4:	00 00                	add    BYTE PTR [rax],al
  c6:	00 00                	add    BYTE PTR [rax],al
  c8:	00 00                	add    BYTE PTR [rax],al
  ca:	00 01                	add    BYTE PTR [rcx],al
  cc:	9c                   	pushf  
  cd:	07                   	(bad)  
  ce:	73 5f                	jae    12f <_init-0x4002e9>
  d0:	63 00                	movsxd eax,DWORD PTR [rax]
  d2:	01 13                	add    DWORD PTR [rbx],edx
  d4:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 02                	add    BYTE PTR [rdx],al
  d9:	91                   	xchg   ecx,eax
  da:	68 08 79 00 00       	push   0x7908
  df:	00 01                	add    BYTE PTR [rcx],al
  e1:	14 ad                	adc    al,0xad
  e3:	00 00                	add    BYTE PTR [rax],al
  e5:	00 02                	add    BYTE PTR [rdx],al
  e7:	91                   	xchg   ecx,eax
  e8:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x2ab02c6>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	00 00                	add    BYTE PTR [rax],al
  13:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  16:	0b 0b                	or     ecx,DWORD PTR [rbx]
  18:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  1b:	0e                   	(bad)  
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  21:	0b 0b                	or     ecx,DWORD PTR [rbx]
  23:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  26:	08 00                	or     BYTE PTR [rax],al
  28:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
  2b:	01 3f                	add    DWORD PTR [rdi],edi
  2d:	19 03                	sbb    DWORD PTR [rbx],eax
  2f:	0e                   	(bad)  
  30:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  32:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  34:	27                   	(bad)  
  35:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  38:	11 01                	adc    DWORD PTR [rcx],eax
  3a:	12 07                	adc    al,BYTE PTR [rdi]
  3c:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  43:	00 00                	add    BYTE PTR [rax],al
  45:	05 05 00 03 08       	add    eax,0x8030005
  4a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  4c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  4e:	49 13 02             	adc    rax,QWORD PTR [r10]
  51:	18 00                	sbb    BYTE PTR [rax],al
  53:	00 06                	add    BYTE PTR [rsi],al
  55:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
  58:	19 03                	sbb    DWORD PTR [rbx],eax
  5a:	0e                   	(bad)  
  5b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  5d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5f:	11 01                	adc    DWORD PTR [rcx],eax
  61:	12 07                	adc    al,BYTE PTR [rdi]
  63:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
  6a:	07                   	(bad)  
  6b:	34 00                	xor    al,0x0
  6d:	03 08                	add    ecx,DWORD PTR [rax]
  6f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  71:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  73:	49 13 02             	adc    rax,QWORD PTR [r10]
  76:	18 00                	sbb    BYTE PTR [rax],al
  78:	00 08                	add    BYTE PTR [rax],cl
  7a:	34 00                	xor    al,0x0
  7c:	03 0e                	add    ecx,DWORD PTR [rsi]
  7e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  80:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  82:	49 13 02             	adc    rax,QWORD PTR [r10]
  85:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	3f                   	(bad)  
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 1d 00 00 00 01    	add    BYTE PTR [rip+0x1000000],bl        # 100000b <_end+0x9fefbb>
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
  1e:	69 6e 2e 63 00 00 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x63
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 09                	add    BYTE PTR [rcx],cl
  29:	02 86 05 40 00 00    	add    al,BYTE PTR [rsi+0x4005]
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	00 1a                	add    BYTE PTR [rdx],bl
  33:	d7                   	xlat   BYTE PTR ds:[rbx]
  34:	9f                   	lahf   
  35:	31 83 a2 08 ad 08    	xor    DWORD PTR [rbx+0x8ad08a2],eax
  3b:	ae                   	scas   al,BYTE PTR es:[rdi]
  3c:	08 84 02 02 00 01 01 	or     BYTE PTR [rdx+rax*1+0x1010002],al

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	73 75                	jae    77 <_init-0x4003a1>
   2:	6d                   	ins    DWORD PTR es:[rdi],dx
   3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   4:	66 74 77             	data16 je 7e <_init-0x40039a>
   7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   8:	5f                   	pop    rdi
   9:	63 00                	movsxd eax,DWORD PTR [rax]
   b:	47                   	rex.RXB
   c:	4e 55                	rex.WRX push rbp
   e:	20 43 20             	and    BYTE PTR [rbx+0x20],al
  11:	34 2e                	xor    al,0x2e
  13:	39 2e                	cmp    DWORD PTR [rsi],ebp
  15:	31 20                	xor    DWORD PTR [rax],esp
  17:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  1c:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  22:	72 69                	jb     8d <_init-0x40038b>
  24:	63 20                	movsxd esp,DWORD PTR [rax]
  26:	2d 6d 61 72 63       	sub    eax,0x6372616d
  2b:	68 3d 78 38 36       	push   0x3638783d
  30:	2d 36 34 20 2d       	sub    eax,0x2d203436
  35:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 617473a2 <_end+0x61146352>
  3c:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
  3f:	70 72                	jo     b3 <_init-0x400365>
  41:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  42:	74 65                	je     a9 <_init-0x40036f>
  44:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  48:	2d 73 74 72 6f       	sub    eax,0x6f727473
  4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4e:	67 00 6d 61          	add    BYTE PTR [ebp+0x61],ch
  52:	69 6e 2e 63 00 6c 6f 	imul   ebp,DWORD PTR [rsi+0x2e],0x6f6c0063
  59:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  5a:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  5e:	73 69                	jae    c9 <_init-0x40034f>
  60:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  62:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  67:	74 00                	je     69 <_init-0x4003af>
  69:	2f                   	(bad)  
  6a:	68 6f 6d 65 2f       	push   0x2f656d6f
  6f:	63 6e 6f             	movsxd ebp,DWORD PTR [rsi+0x6f]
  72:	2f                   	(bad)  
  73:	61                   	(bad)  
  74:	73 6d                	jae    e3 <_init-0x400335>
  76:	2b 63 00             	sub    esp,DWORD PTR [rbx+0x0]
  79:	73 5f                	jae    da <_init-0x40033e>
  7b:	61                   	(bad)  
  7c:	73 6d                	jae    eb <_init-0x40032d>
  7e:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
  81:	73 69                	jae    ec <_init-0x40032c>
  83:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  85:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  8a:	61                   	(bad)  
  8b:	72 00                	jb     8d <_init-0x40038b>
  8d:	6d                   	ins    DWORD PTR es:[rdi],dx
  8e:	61                   	(bad)  
  8f:	69 6e 00 6c 6f 6e 67 	imul   ebp,DWORD PTR [rsi+0x0],0x676e6f6c
  96:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  99:	74 00                	je     9b <_init-0x40037d>
  9b:	73 68                	jae    105 <_init-0x400313>
  9d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  9e:	72 74                	jb     114 <_init-0x400304>
  a0:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  a3:	73 69                	jae    10e <_init-0x40030a>
  a5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  a7:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  ac:	74 00                	je     ae <_init-0x40036a>
  ae:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b1:	61                   	(bad)  
  b2:	74 00                	je     b4 <_init-0x400364>
  b4:	73 68                	jae    11e <_init-0x4002fa>
  b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b7:	72 74                	jb     12d <_init-0x4002eb>
  b9:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  bc:	74 00                	je     be <_init-0x40035a>
  be:	73 69                	jae    129 <_init-0x4002ef>
  c0:	7a 65                	jp     127 <_init-0x4002f1>
  c2:	74 79                	je     13d <_init-0x4002db>
  c4:	70 65                	jo     12b <_init-0x4002ed>
	...
Contents of the .eh_frame section:

00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b

  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_undefined: r16 (rip)

00000018 0000000000000014 0000001c FDE cie=00000000 pc=0000000000400490..00000000004004ba
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b

  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000048 0000000000000024 0000001c FDE cie=00000030 pc=0000000000400440..0000000000400490
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 0000000000400446
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 0000000000400450
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 000000000000001c 00000044 FDE cie=00000030 pc=0000000000400586..00000000004005a0
  DW_CFA_advance_loc: 1 to 0000000000400587
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 000000000040058a
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 21 to 000000000040059f
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000090 000000000000001c 00000064 FDE cie=00000030 pc=00000000004005a0..0000000000400605
  DW_CFA_advance_loc: 1 to 00000000004005a1
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000004005a4
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc1: 96 to 0000000000400604
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop

000000b0 0000000000000044 00000084 FDE cie=00000030 pc=0000000000400630..0000000000400695
  DW_CFA_advance_loc: 2 to 0000000000400632
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 5 to 0000000000400637
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 000000000040063c
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 5 to 0000000000400641
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 8 to 0000000000400649
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 0000000000400651
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 13 to 000000000040065e
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 44 to 000000000040068a
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 000000000040068b
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 000000000040068c
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 000000000040068e
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 0000000000400690
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 0000000000400692
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000000000400694
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

000000f8 0000000000000014 000000cc FDE cie=00000030 pc=00000000004006a0..00000000004006a2
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000110 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    0000000000400586 000000000000007f 
    0000000000000000 0000000000000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0xe7 (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0xb): GNU C 4.9.1 -mtune=generic -march=x86-64 -g -fstack-protector-strong
    <10>   DW_AT_language    : 1	(ANSI C)
    <11>   DW_AT_name        : (indirect string, offset: 0x50): main.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x69): /home/cno/asm+c
    <19>   DW_AT_low_pc      : 0x400586
    <21>   DW_AT_high_pc     : 0x7f
    <29>   DW_AT_stmt_list   : 0x0
 <1><2d>: Abbrev Number: 2 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 8
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x57): long unsigned int
 <1><34>: Abbrev Number: 2 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 1
    <36>   DW_AT_encoding    : 8	(unsigned char)
    <37>   DW_AT_name        : (indirect string, offset: 0x7f): unsigned char
 <1><3b>: Abbrev Number: 2 (DW_TAG_base_type)
    <3c>   DW_AT_byte_size   : 2
    <3d>   DW_AT_encoding    : 7	(unsigned)
    <3e>   DW_AT_name        : (indirect string, offset: 0x9b): short unsigned int
 <1><42>: Abbrev Number: 2 (DW_TAG_base_type)
    <43>   DW_AT_byte_size   : 4
    <44>   DW_AT_encoding    : 7	(unsigned)
    <45>   DW_AT_name        : (indirect string, offset: 0x5c): unsigned int
 <1><49>: Abbrev Number: 2 (DW_TAG_base_type)
    <4a>   DW_AT_byte_size   : 1
    <4b>   DW_AT_encoding    : 6	(signed char)
    <4c>   DW_AT_name        : (indirect string, offset: 0x81): signed char
 <1><50>: Abbrev Number: 2 (DW_TAG_base_type)
    <51>   DW_AT_byte_size   : 2
    <52>   DW_AT_encoding    : 5	(signed)
    <53>   DW_AT_name        : (indirect string, offset: 0xb4): short int
 <1><57>: Abbrev Number: 3 (DW_TAG_base_type)
    <58>   DW_AT_byte_size   : 4
    <59>   DW_AT_encoding    : 5	(signed)
    <5a>   DW_AT_name        : int
 <1><5e>: Abbrev Number: 2 (DW_TAG_base_type)
    <5f>   DW_AT_byte_size   : 8
    <60>   DW_AT_encoding    : 5	(signed)
    <61>   DW_AT_name        : (indirect string, offset: 0x92): long int
 <1><65>: Abbrev Number: 2 (DW_TAG_base_type)
    <66>   DW_AT_byte_size   : 8
    <67>   DW_AT_encoding    : 7	(unsigned)
    <68>   DW_AT_name        : (indirect string, offset: 0xbe): sizetype
 <1><6c>: Abbrev Number: 2 (DW_TAG_base_type)
    <6d>   DW_AT_byte_size   : 1
    <6e>   DW_AT_encoding    : 6	(signed char)
    <6f>   DW_AT_name        : (indirect string, offset: 0x88): char
 <1><73>: Abbrev Number: 4 (DW_TAG_subprogram)
    <74>   DW_AT_external    : 1
    <74>   DW_AT_name        : (indirect string, offset: 0x0): sumoftwo_c
    <78>   DW_AT_decl_file   : 1
    <79>   DW_AT_decl_line   : 9
    <7a>   DW_AT_prototyped  : 1
    <7a>   DW_AT_type        : <0xad>
    <7e>   DW_AT_low_pc      : 0x400586
    <86>   DW_AT_high_pc     : 0x1a
    <8e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <90>   DW_AT_GNU_all_call_sites: 1
    <90>   DW_AT_sibling     : <0xad>
 <2><94>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <95>   DW_AT_name        : a
    <97>   DW_AT_decl_file   : 1
    <98>   DW_AT_decl_line   : 9
    <99>   DW_AT_type        : <0xad>
    <9d>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><a0>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <a1>   DW_AT_name        : b
    <a3>   DW_AT_decl_file   : 1
    <a4>   DW_AT_decl_line   : 9
    <a5>   DW_AT_type        : <0xad>
    <a9>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><ac>: Abbrev Number: 0
 <1><ad>: Abbrev Number: 2 (DW_TAG_base_type)
    <ae>   DW_AT_byte_size   : 4
    <af>   DW_AT_encoding    : 4	(float)
    <b0>   DW_AT_name        : (indirect string, offset: 0xae): float
 <1><b4>: Abbrev Number: 6 (DW_TAG_subprogram)
    <b5>   DW_AT_external    : 1
    <b5>   DW_AT_name        : (indirect string, offset: 0x8d): main
    <b9>   DW_AT_decl_file   : 1
    <ba>   DW_AT_decl_line   : 14
    <bb>   DW_AT_low_pc      : 0x4005a0
    <c3>   DW_AT_high_pc     : 0x65
    <cb>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <cd>   DW_AT_GNU_all_tail_call_sites: 1
 <2><cd>: Abbrev Number: 7 (DW_TAG_variable)
    <ce>   DW_AT_name        : s_c
    <d2>   DW_AT_decl_file   : 1
    <d3>   DW_AT_decl_line   : 19
    <d4>   DW_AT_type        : <0xad>
    <d8>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><db>: Abbrev Number: 8 (DW_TAG_variable)
    <dc>   DW_AT_name        : (indirect string, offset: 0x79): s_asm
    <e0>   DW_AT_decl_file   : 1
    <e1>   DW_AT_decl_line   : 20
    <e2>   DW_AT_type        : <0xad>
    <e6>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><e9>: Abbrev Number: 0
 <1><ea>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      63
  DWARF Version:               2
  Prologue Length:             29
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 args
  Opcode 3 has 1 args
  Opcode 4 has 1 args
  Opcode 5 has 1 args
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 args
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 args

 The Directory Table is empty.

 The File Name Table (offset 0x1c):
  Entry	Dir	Time	Size	Name
  1	0	0	0	main.c

 Line Number Statements:
  [0x00000027]  Extended opcode 2: set Address to 0x400586
  [0x00000032]  Special opcode 13: advance Address by 0 to 0x400586 and Line by 8 to 9
  [0x00000033]  Special opcode 202: advance Address by 14 to 0x400594 and Line by 1 to 10
  [0x00000034]  Special opcode 146: advance Address by 10 to 0x40059e and Line by 1 to 11
  [0x00000035]  Special opcode 36: advance Address by 2 to 0x4005a0 and Line by 3 to 14
  [0x00000036]  Special opcode 118: advance Address by 8 to 0x4005a8 and Line by 1 to 15
  [0x00000037]  Special opcode 149: advance Address by 10 to 0x4005b2 and Line by 4 to 19
  [0x00000038]  Advance PC by constant 17 to 0x4005c3
  [0x00000039]  Special opcode 160: advance Address by 11 to 0x4005ce and Line by 1 to 20
  [0x0000003a]  Advance PC by constant 17 to 0x4005df
  [0x0000003b]  Special opcode 161: advance Address by 11 to 0x4005ea and Line by 2 to 22
  [0x0000003c]  Advance PC by constant 17 to 0x4005fb
  [0x0000003d]  Special opcode 119: advance Address by 8 to 0x400603 and Line by 2 to 24
  [0x0000003e]  Advance PC by 2 to 0x400605
  [0x00000040]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 73756d6f 6674776f 5f630047 4e552043 sumoftwo_c.GNU C
  0x00000010 20342e39 2e31202d 6d74756e 653d6765  4.9.1 -mtune=ge
  0x00000020 6e657269 63202d6d 61726368 3d783836 neric -march=x86
  0x00000030 2d363420 2d67202d 66737461 636b2d70 -64 -g -fstack-p
  0x00000040 726f7465 63746f72 2d737472 6f6e6700 rotector-strong.
  0x00000050 6d61696e 2e63006c 6f6e6720 756e7369 main.c.long unsi
  0x00000060 676e6564 20696e74 002f686f 6d652f63 gned int./home/c
  0x00000070 6e6f2f61 736d2b63 00735f61 736d0075 no/asm+c.s_asm.u
  0x00000080 6e736967 6e656420 63686172 006d6169 nsigned char.mai
  0x00000090 6e006c6f 6e672069 6e740073 686f7274 n.long int.short
  0x000000a0 20756e73 69676e65 6420696e 7400666c  unsigned int.fl
  0x000000b0 6f617400 73686f72 7420696e 74007369 oat.short int.si
  0x000000c0 7a657479 706500                     zetype.

