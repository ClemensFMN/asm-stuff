
main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x1a3>
  400248:	78 38                	js     400282 <_init-0x196>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 32                	add    BYTE PTR [rdx],dh
  400285:	61                   	(bad)  
  400286:	7e 49                	jle    4002d1 <_init-0x147>
  400288:	b4 2a                	mov    ah,0x2a
  40028a:	69 53 c2 d2 72 50 93 	imul   edx,DWORD PTR [rbx-0x3e],0x935072d2
  400291:	a3                   	.byte 0xa3
  400292:	f3 53                	repz push rbx
  400294:	88 e4                	mov    ah,ah
  400296:	37                   	(bad)  
  400297:	cd                   	.byte 0xcd

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	10 00                	adc    BYTE PTR [rax],al
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	17                   	(bad)  
  400301:	00 00                	add    BYTE PTR [rax],al
  400303:	00 12                	add    BYTE PTR [rdx],dl
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 29                	add    BYTE PTR [rcx],ch
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .dynstr:

0000000000400330 <.dynstr>:
  400330:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400334:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400336:	73 6f                	jae    4003a7 <_init-0x71>
  400338:	2e 36 00 70 75       	cs add BYTE PTR ss:[rax+0x75],dh
  40033d:	74 73                	je     4003b2 <_init-0x66>
  40033f:	00 70 72             	add    BYTE PTR [rax+0x72],dh
  400342:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
  400349:	6c                   	ins    BYTE PTR es:[rdi],dx
  40034a:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400351:	72 74                	jb     4003c7 <_init-0x51>
  400353:	5f                   	pop    rdi
  400354:	6d                   	ins    DWORD PTR es:[rdi],dx
  400355:	61                   	(bad)  
  400356:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  40035d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40035e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40035f:	5f                   	pop    rdi
  400360:	73 74                	jae    4003d6 <_init-0x42>
  400362:	61                   	(bad)  
  400363:	72 74                	jb     4003d9 <_init-0x3f>
  400365:	5f                   	pop    rdi
  400366:	5f                   	pop    rdi
  400367:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40036a:	49                   	rex.WB
  40036b:	42                   	rex.X
  40036c:	43 5f                	rex.XB pop r15
  40036e:	32 2e                	xor    ch,BYTE PTR [rsi]
  400370:	32 2e                	xor    ch,BYTE PTR [rsi]
  400372:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400374 <.gnu.version>:
  400374:	00 00                	add    BYTE PTR [rax],al
  400376:	02 00                	add    al,BYTE PTR [rax]
  400378:	02 00                	add    al,BYTE PTR [rax]
  40037a:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400380 <.gnu.version_r>:
  400380:	01 00                	add    DWORD PTR [rax],eax
  400382:	01 00                	add    DWORD PTR [rax],eax
  400384:	01 00                	add    DWORD PTR [rax],eax
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	10 00                	adc    BYTE PTR [rax],al
  40038a:	00 00                	add    BYTE PTR [rax],al
  40038c:	00 00                	add    BYTE PTR [rax],al
  40038e:	00 00                	add    BYTE PTR [rax],al
  400390:	75 1a                	jne    4003ac <_init-0x6c>
  400392:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400398:	38 00                	cmp    BYTE PTR [rax],al
  40039a:	00 00                	add    BYTE PTR [rax],al
  40039c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004003a0 <.rela.dyn>:
  4003a0:	f8                   	clc    
  4003a1:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  4003a4:	00 00                	add    BYTE PTR [rax],al
  4003a6:	00 00                	add    BYTE PTR [rax],al
  4003a8:	06                   	(bad)  
  4003a9:	00 00                	add    BYTE PTR [rax],al
  4003ab:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .rela.plt:

00000000004003b8 <.rela.plt>:
  4003b8:	18 10                	sbb    BYTE PTR [rax],dl
  4003ba:	60                   	(bad)  
  4003bb:	00 00                	add    BYTE PTR [rax],al
  4003bd:	00 00                	add    BYTE PTR [rax],al
  4003bf:	00 07                	add    BYTE PTR [rdi],al
  4003c1:	00 00                	add    BYTE PTR [rax],al
  4003c3:	00 01                	add    BYTE PTR [rcx],al
	...
  4003cd:	00 00                	add    BYTE PTR [rax],al
  4003cf:	00 20                	add    BYTE PTR [rax],ah
  4003d1:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003d4:	00 00                	add    BYTE PTR [rax],al
  4003d6:	00 00                	add    BYTE PTR [rax],al
  4003d8:	07                   	(bad)  
  4003d9:	00 00                	add    BYTE PTR [rax],al
  4003db:	00 02                	add    BYTE PTR [rdx],al
	...
  4003e5:	00 00                	add    BYTE PTR [rax],al
  4003e7:	00 28                	add    BYTE PTR [rax],ch
  4003e9:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003ec:	00 00                	add    BYTE PTR [rax],al
  4003ee:	00 00                	add    BYTE PTR [rax],al
  4003f0:	07                   	(bad)  
  4003f1:	00 00                	add    BYTE PTR [rax],al
  4003f3:	00 03                	add    BYTE PTR [rbx],al
	...
  4003fd:	00 00                	add    BYTE PTR [rax],al
  4003ff:	00 30                	add    BYTE PTR [rax],dh
  400401:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400404:	00 00                	add    BYTE PTR [rax],al
  400406:	00 00                	add    BYTE PTR [rax],al
  400408:	07                   	(bad)  
  400409:	00 00                	add    BYTE PTR [rax],al
  40040b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .init:

0000000000400418 <_init>:
  400418:	48 83 ec 08          	sub    rsp,0x8
  40041c:	48 8b 05 d5 0b 20 00 	mov    rax,QWORD PTR [rip+0x200bd5]        # 600ff8 <_DYNAMIC+0x1d0>
  400423:	48 85 c0             	test   rax,rax
  400426:	74 05                	je     40042d <_init+0x15>
  400428:	e8 53 00 00 00       	call   400480 <__gmon_start__@plt>
  40042d:	48 83 c4 08          	add    rsp,0x8
  400431:	c3                   	ret    

Disassembly of section .plt:

0000000000400440 <puts@plt-0x10>:
  400440:	ff 35 c2 0b 20 00    	push   QWORD PTR [rip+0x200bc2]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400446:	ff 25 c4 0b 20 00    	jmp    QWORD PTR [rip+0x200bc4]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40044c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400450 <puts@plt>:
  400450:	ff 25 c2 0b 20 00    	jmp    QWORD PTR [rip+0x200bc2]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400456:	68 00 00 00 00       	push   0x0
  40045b:	e9 e0 ff ff ff       	jmp    400440 <_init+0x28>

0000000000400460 <printf@plt>:
  400460:	ff 25 ba 0b 20 00    	jmp    QWORD PTR [rip+0x200bba]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400466:	68 01 00 00 00       	push   0x1
  40046b:	e9 d0 ff ff ff       	jmp    400440 <_init+0x28>

0000000000400470 <__libc_start_main@plt>:
  400470:	ff 25 b2 0b 20 00    	jmp    QWORD PTR [rip+0x200bb2]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400476:	68 02 00 00 00       	push   0x2
  40047b:	e9 c0 ff ff ff       	jmp    400440 <_init+0x28>

0000000000400480 <__gmon_start__@plt>:
  400480:	ff 25 aa 0b 20 00    	jmp    QWORD PTR [rip+0x200baa]        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400486:	68 03 00 00 00       	push   0x3
  40048b:	e9 b0 ff ff ff       	jmp    400440 <_init+0x28>

Disassembly of section .text:

0000000000400490 <_start>:
  400490:	31 ed                	xor    ebp,ebp
  400492:	49 89 d1             	mov    r9,rdx
  400495:	5e                   	pop    rsi
  400496:	48 89 e2             	mov    rdx,rsp
  400499:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40049d:	50                   	push   rax
  40049e:	54                   	push   rsp
  40049f:	49 c7 c0 90 06 40 00 	mov    r8,0x400690
  4004a6:	48 c7 c1 20 06 40 00 	mov    rcx,0x400620
  4004ad:	48 c7 c7 9f 05 40 00 	mov    rdi,0x40059f
  4004b4:	e8 b7 ff ff ff       	call   400470 <__libc_start_main@plt>
  4004b9:	f4                   	hlt    
  4004ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004004c0 <deregister_tm_clones>:
  4004c0:	b8 4f 10 60 00       	mov    eax,0x60104f
  4004c5:	55                   	push   rbp
  4004c6:	48 2d 48 10 60 00    	sub    rax,0x601048
  4004cc:	48 83 f8 0e          	cmp    rax,0xe
  4004d0:	48 89 e5             	mov    rbp,rsp
  4004d3:	76 1b                	jbe    4004f0 <deregister_tm_clones+0x30>
  4004d5:	b8 00 00 00 00       	mov    eax,0x0
  4004da:	48 85 c0             	test   rax,rax
  4004dd:	74 11                	je     4004f0 <deregister_tm_clones+0x30>
  4004df:	5d                   	pop    rbp
  4004e0:	bf 48 10 60 00       	mov    edi,0x601048
  4004e5:	ff e0                	jmp    rax
  4004e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4004ee:	00 00 
  4004f0:	5d                   	pop    rbp
  4004f1:	c3                   	ret    
  4004f2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4004f9:	1f 84 00 00 00 00 00 

0000000000400500 <register_tm_clones>:
  400500:	be 48 10 60 00       	mov    esi,0x601048
  400505:	55                   	push   rbp
  400506:	48 81 ee 48 10 60 00 	sub    rsi,0x601048
  40050d:	48 c1 fe 03          	sar    rsi,0x3
  400511:	48 89 e5             	mov    rbp,rsp
  400514:	48 89 f0             	mov    rax,rsi
  400517:	48 c1 e8 3f          	shr    rax,0x3f
  40051b:	48 01 c6             	add    rsi,rax
  40051e:	48 d1 fe             	sar    rsi,1
  400521:	74 15                	je     400538 <register_tm_clones+0x38>
  400523:	b8 00 00 00 00       	mov    eax,0x0
  400528:	48 85 c0             	test   rax,rax
  40052b:	74 0b                	je     400538 <register_tm_clones+0x38>
  40052d:	5d                   	pop    rbp
  40052e:	bf 48 10 60 00       	mov    edi,0x601048
  400533:	ff e0                	jmp    rax
  400535:	0f 1f 00             	nop    DWORD PTR [rax]
  400538:	5d                   	pop    rbp
  400539:	c3                   	ret    
  40053a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400540 <__do_global_dtors_aux>:
  400540:	80 3d 01 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b01],0x0        # 601048 <__TMC_END__>
  400547:	75 11                	jne    40055a <__do_global_dtors_aux+0x1a>
  400549:	55                   	push   rbp
  40054a:	48 89 e5             	mov    rbp,rsp
  40054d:	e8 6e ff ff ff       	call   4004c0 <deregister_tm_clones>
  400552:	5d                   	pop    rbp
  400553:	c6 05 ee 0a 20 00 01 	mov    BYTE PTR [rip+0x200aee],0x1        # 601048 <__TMC_END__>
  40055a:	f3 c3                	repz ret 
  40055c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400560 <frame_dummy>:
  400560:	bf 20 0e 60 00       	mov    edi,0x600e20
  400565:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400569:	75 05                	jne    400570 <frame_dummy+0x10>
  40056b:	eb 93                	jmp    400500 <register_tm_clones>
  40056d:	0f 1f 00             	nop    DWORD PTR [rax]
  400570:	b8 00 00 00 00       	mov    eax,0x0
  400575:	48 85 c0             	test   rax,rax
  400578:	74 f1                	je     40056b <frame_dummy+0xb>
  40057a:	55                   	push   rbp
  40057b:	48 89 e5             	mov    rbp,rsp
  40057e:	ff d0                	call   rax
  400580:	5d                   	pop    rbp
  400581:	e9 7a ff ff ff       	jmp    400500 <register_tm_clones>

0000000000400586 <sumoftwo_c>:
  400586:	55                   	push   rbp
  400587:	48 89 e5             	mov    rbp,rsp
  40058a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40058e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  400592:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  400596:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  40059a:	48 01 d0             	add    rax,rdx
  40059d:	5d                   	pop    rbp
  40059e:	c3                   	ret    

000000000040059f <main>:
  40059f:	55                   	push   rbp
  4005a0:	48 89 e5             	mov    rbp,rsp
  4005a3:	48 83 ec 10          	sub    rsp,0x10
  4005a7:	bf a4 06 40 00       	mov    edi,0x4006a4
  4005ac:	e8 9f fe ff ff       	call   400450 <puts@plt>
  4005b1:	be 04 00 00 00       	mov    esi,0x4
  4005b6:	bf 03 00 00 00       	mov    edi,0x3
  4005bb:	e8 c6 ff ff ff       	call   400586 <sumoftwo_c>
  4005c0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  4005c4:	be 04 00 00 00       	mov    esi,0x4
  4005c9:	bf 03 00 00 00       	mov    edi,0x3
  4005ce:	e8 3f 00 00 00       	call   400612 <sumoftwo_asm>
  4005d3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4005d7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  4005db:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4005df:	48 89 c6             	mov    rsi,rax
  4005e2:	bf b1 06 40 00       	mov    edi,0x4006b1
  4005e7:	b8 00 00 00 00       	mov    eax,0x0
  4005ec:	e8 6f fe ff ff       	call   400460 <printf@plt>
  4005f1:	c9                   	leave  
  4005f2:	c3                   	ret    
  4005f3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4005fa:	00 00 00 
  4005fd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000400600 <maxofthree>:
  400600:	48 89 f8             	mov    rax,rdi
  400603:	48 39 f0             	cmp    rax,rsi
  400606:	48 0f 4c c6          	cmovl  rax,rsi
  40060a:	48 39 d0             	cmp    rax,rdx
  40060d:	48 0f 4c c2          	cmovl  rax,rdx
  400611:	c3                   	ret    

0000000000400612 <sumoftwo_asm>:
  400612:	48 89 f8             	mov    rax,rdi
  400615:	48 89 f3             	mov    rbx,rsi
  400618:	48 01 d8             	add    rax,rbx
  40061b:	c3                   	ret    
  40061c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400620 <__libc_csu_init>:
  400620:	41 57                	push   r15
  400622:	41 89 ff             	mov    r15d,edi
  400625:	41 56                	push   r14
  400627:	49 89 f6             	mov    r14,rsi
  40062a:	41 55                	push   r13
  40062c:	49 89 d5             	mov    r13,rdx
  40062f:	41 54                	push   r12
  400631:	4c 8d 25 d8 07 20 00 	lea    r12,[rip+0x2007d8]        # 600e10 <__frame_dummy_init_array_entry>
  400638:	55                   	push   rbp
  400639:	48 8d 2d d8 07 20 00 	lea    rbp,[rip+0x2007d8]        # 600e18 <__init_array_end>
  400640:	53                   	push   rbx
  400641:	4c 29 e5             	sub    rbp,r12
  400644:	31 db                	xor    ebx,ebx
  400646:	48 c1 fd 03          	sar    rbp,0x3
  40064a:	48 83 ec 08          	sub    rsp,0x8
  40064e:	e8 c5 fd ff ff       	call   400418 <_init>
  400653:	48 85 ed             	test   rbp,rbp
  400656:	74 1e                	je     400676 <__libc_csu_init+0x56>
  400658:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40065f:	00 
  400660:	4c 89 ea             	mov    rdx,r13
  400663:	4c 89 f6             	mov    rsi,r14
  400666:	44 89 ff             	mov    edi,r15d
  400669:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40066d:	48 83 c3 01          	add    rbx,0x1
  400671:	48 39 eb             	cmp    rbx,rbp
  400674:	75 ea                	jne    400660 <__libc_csu_init+0x40>
  400676:	48 83 c4 08          	add    rsp,0x8
  40067a:	5b                   	pop    rbx
  40067b:	5d                   	pop    rbp
  40067c:	41 5c                	pop    r12
  40067e:	41 5d                	pop    r13
  400680:	41 5e                	pop    r14
  400682:	41 5f                	pop    r15
  400684:	c3                   	ret    
  400685:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40068c:	00 00 00 00 

0000000000400690 <__libc_csu_fini>:
  400690:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400694 <_fini>:
  400694:	48 83 ec 08          	sub    rsp,0x8
  400698:	48 83 c4 08          	add    rsp,0x8
  40069c:	c3                   	ret    

Disassembly of section .rodata:

00000000004006a0 <_IO_stdin_used>:
  4006a0:	01 00                	add    DWORD PTR [rax],eax
  4006a2:	02 00                	add    al,BYTE PTR [rax]
  4006a4:	48                   	rex.W
  4006a5:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  4006a7:	6c                   	ins    BYTE PTR es:[rdi],dx
  4006a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4006a9:	20 57 6f             	and    BYTE PTR [rdi+0x6f],dl
  4006ac:	72 6c                	jb     40071a <_IO_stdin_used+0x7a>
  4006ae:	64 21 00             	and    DWORD PTR fs:[rax],eax
  4006b1:	25 6c 64 2c 20       	and    eax,0x202c646c
  4006b6:	25 6c 64 0a 00       	and    eax,0xa646c

Disassembly of section .eh_frame_hdr:

00000000004006bc <.eh_frame_hdr>:
  4006bc:	01 1b                	add    DWORD PTR [rbx],ebx
  4006be:	03 3b                	add    edi,DWORD PTR [rbx]
  4006c0:	38 00                	cmp    BYTE PTR [rax],al
  4006c2:	00 00                	add    BYTE PTR [rax],al
  4006c4:	06                   	(bad)  
  4006c5:	00 00                	add    BYTE PTR [rax],al
  4006c7:	00 84 fd ff ff 84 00 	add    BYTE PTR [rbp+rdi*8+0x84ffff],al
  4006ce:	00 00                	add    BYTE PTR [rax],al
  4006d0:	d4                   	(bad)  
  4006d1:	fd                   	std    
  4006d2:	ff                   	(bad)  
  4006d3:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  4006d7:	00 ca                	add    dl,cl
  4006d9:	fe                   	(bad)  
  4006da:	ff                   	(bad)  
  4006db:	ff ac 00 00 00 e3 fe 	jmp    FWORD PTR [rax+rax*1-0x11d0000]
  4006e2:	ff                   	(bad)  
  4006e3:	ff cc                	dec    esp
  4006e5:	00 00                	add    BYTE PTR [rax],al
  4006e7:	00 64 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],ah
  4006eb:	ff                   	(bad)  
  4006ec:	ec                   	in     al,dx
  4006ed:	00 00                	add    BYTE PTR [rax],al
  4006ef:	00 d4                	add    ah,dl
  4006f1:	ff                   	(bad)  
  4006f2:	ff                   	(bad)  
  4006f3:	ff 34 01             	push   QWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000004006f8 <__FRAME_END__-0x110>:
  4006f8:	14 00                	adc    al,0x0
  4006fa:	00 00                	add    BYTE PTR [rax],al
  4006fc:	00 00                	add    BYTE PTR [rax],al
  4006fe:	00 00                	add    BYTE PTR [rax],al
  400700:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400703:	00 01                	add    BYTE PTR [rcx],al
  400705:	78 10                	js     400717 <_IO_stdin_used+0x77>
  400707:	01 1b                	add    DWORD PTR [rbx],ebx
  400709:	0c 07                	or     al,0x7
  40070b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400711:	00 00                	add    BYTE PTR [rax],al
  400713:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400716:	00 00                	add    BYTE PTR [rax],al
  400718:	78 fd                	js     400717 <_IO_stdin_used+0x77>
  40071a:	ff                   	(bad)  
  40071b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400725:	00 00                	add    BYTE PTR [rax],al
  400727:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40072a:	00 00                	add    BYTE PTR [rax],al
  40072c:	00 00                	add    BYTE PTR [rax],al
  40072e:	00 00                	add    BYTE PTR [rax],al
  400730:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400733:	00 01                	add    BYTE PTR [rcx],al
  400735:	78 10                	js     400747 <_IO_stdin_used+0xa7>
  400737:	01 1b                	add    DWORD PTR [rbx],ebx
  400739:	0c 07                	or     al,0x7
  40073b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400741:	00 00                	add    BYTE PTR [rax],al
  400743:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400746:	00 00                	add    BYTE PTR [rax],al
  400748:	f8                   	clc    
  400749:	fc                   	cld    
  40074a:	ff                   	(bad)  
  40074b:	ff 50 00             	call   QWORD PTR [rax+0x0]
  40074e:	00 00                	add    BYTE PTR [rax],al
  400750:	00 0e                	add    BYTE PTR [rsi],cl
  400752:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400755:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400758:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40075b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40075e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400760:	2a 33                	sub    dh,BYTE PTR [rbx]
  400762:	24 22                	and    al,0x22
  400764:	00 00                	add    BYTE PTR [rax],al
  400766:	00 00                	add    BYTE PTR [rax],al
  400768:	1c 00                	sbb    al,0x0
  40076a:	00 00                	add    BYTE PTR [rax],al
  40076c:	44 00 00             	add    BYTE PTR [rax],r8b
  40076f:	00 16                	add    BYTE PTR [rsi],dl
  400771:	fe                   	(bad)  
  400772:	ff                   	(bad)  
  400773:	ff 19                	call   FWORD PTR [rcx]
  400775:	00 00                	add    BYTE PTR [rax],al
  400777:	00 00                	add    BYTE PTR [rax],al
  400779:	41 0e                	rex.B (bad) 
  40077b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400781:	54                   	push   rsp
  400782:	0c 07                	or     al,0x7
  400784:	08 00                	or     BYTE PTR [rax],al
  400786:	00 00                	add    BYTE PTR [rax],al
  400788:	1c 00                	sbb    al,0x0
  40078a:	00 00                	add    BYTE PTR [rax],al
  40078c:	64 00 00             	add    BYTE PTR fs:[rax],al
  40078f:	00 0f                	add    BYTE PTR [rdi],cl
  400791:	fe                   	(bad)  
  400792:	ff                   	(bad)  
  400793:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  400797:	00 00                	add    BYTE PTR [rax],al
  400799:	41 0e                	rex.B (bad) 
  40079b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4007a1:	02 4f 0c             	add    cl,BYTE PTR [rdi+0xc]
  4007a4:	07                   	(bad)  
  4007a5:	08 00                	or     BYTE PTR [rax],al
  4007a7:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  4007ab:	00 84 00 00 00 70 fe 	add    BYTE PTR [rax+rax*1-0x1900000],al
  4007b2:	ff                   	(bad)  
  4007b3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  4007b6:	00 00                	add    BYTE PTR [rax],al
  4007b8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  4007bb:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
  4007c1:	8e 03                	mov    es,WORD PTR [rbx]
  4007c3:	45 0e                	rex.RB (bad) 
  4007c5:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
  4007cb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701619 <_end+0xffffffff861005c9>
  4007d1:	06                   	(bad)  
  4007d2:	48 0e                	rex.W (bad) 
  4007d4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  4007da:	6c                   	ins    BYTE PTR es:[rdi],dx
  4007db:	0e                   	(bad)  
  4007dc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  4007df:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  4007e2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  4007e5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  4007e8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  4007eb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4007ee:	08 00                	or     BYTE PTR [rax],al
  4007f0:	14 00                	adc    al,0x0
  4007f2:	00 00                	add    BYTE PTR [rax],al
  4007f4:	cc                   	int3   
  4007f5:	00 00                	add    BYTE PTR [rax],al
  4007f7:	00 98 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],bl
	...

0000000000400808 <__FRAME_END__>:
  400808:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	60                   	(bad)  
  600e11:	05 40 00 00 00       	add    eax,0x40
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	40 05 40 00 00 00    	rex add eax,0x40
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	18 04 40             	sbb    BYTE PTR [rax+rax*2],al
  600e43:	00 00                	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 94 06 40 00 00 00 	add    BYTE PTR [rsi+rax*1+0x40],dl
  600e56:	00 00                	add    BYTE PTR [rax],al
  600e58:	19 00                	sbb    DWORD PTR [rax],eax
  600e5a:	00 00                	add    BYTE PTR [rax],al
  600e5c:	00 00                	add    BYTE PTR [rax],al
  600e5e:	00 00                	add    BYTE PTR [rax],al
  600e60:	10 0e                	adc    BYTE PTR [rsi],cl
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 30                	add    BYTE PTR [rax],dh
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  600ed3:	00 00                	add    BYTE PTR [rax],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	60                   	(bad)  
  600f11:	00 00                	add    BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 b8 03 40 00 00    	add    BYTE PTR [rax+0x4003],bh
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 a0 03 40 00 00    	add    BYTE PTR [rax+0x4003],ah
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 80 03 40 00 00    	add    BYTE PTR [rax+0x4003],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 74 03 40          	add    BYTE PTR [rbx+rax*1+0x40],dh
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 56 04             	add    BYTE PTR [rsi+0x4],dl
  60101a:	40 00 00             	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 66 04             	add    BYTE PTR [rsi+0x4],ah
  601022:	40 00 00             	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 76 04             	add    BYTE PTR [rsi+0x4],dh
  60102a:	40 00 00             	add    BYTE PTR [rax],al
  60102d:	00 00                	add    BYTE PTR [rax],al
  60102f:	00 86 04 40 00 00    	add    BYTE PTR [rsi+0x4004],al
  601035:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601038 <__data_start>:
	...

0000000000601040 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601048 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x4003a0>
   a:	74 75                	je     81 <_init-0x400397>
   c:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
   f:	39 2e                	cmp    DWORD PTR [rsi],ebp
  11:	31 2d 31 36 75 62    	xor    DWORD PTR [rip+0x62753631],ebp        # 62753648 <_end+0x621525f8>
  17:	75 6e                	jne    87 <_init-0x400391>
  19:	74 75                	je     90 <_init-0x400388>
  1b:	36 29 20             	sub    DWORD PTR ss:[rax],esp
  1e:	34 2e                	xor    al,0x2e
  20:	39 2e                	cmp    DWORD PTR [rsi],ebp
  22:	31 00                	xor    DWORD PTR [rax],eax
  24:	47                   	rex.RXB
  25:	43                   	rex.XB
  26:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
  29:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
  2c:	75 6e                	jne    9c <_init-0x40037c>
  2e:	74 75                	je     a5 <_init-0x400373>
  30:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  33:	38 2e                	cmp    BYTE PTR [rsi],ch
  35:	33 2d 31 32 75 62    	xor    ebp,DWORD PTR [rip+0x62753231]        # 6275326c <_end+0x6215221c>
  3b:	75 6e                	jne    ab <_init-0x40036d>
  3d:	74 75                	je     b4 <_init-0x400364>
  3f:	33 29                	xor    ebp,DWORD PTR [rcx]
  41:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  44:	38 2e                	cmp    BYTE PTR [rsi],ch
  46:	33 00                	xor    eax,DWORD PTR [rax]

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	86 05 40 00 00 00    	xchg   BYTE PTR [rip+0x40],al        # 56 <_init-0x4003c2>
  16:	00 00                	add    BYTE PTR [rax],al
  18:	6d                   	ins    DWORD PTR es:[rdi],dx
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	eb 00                	jmp    2 <_init-0x400416>
   2:	00 00                	add    BYTE PTR [rax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	1e                   	(bad)  
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 01                	add    BYTE PTR [rcx],al
  11:	63 00                	movsxd eax,DWORD PTR [rax]
  13:	00 00                	add    BYTE PTR [rax],al
  15:	7c 00                	jl     17 <_init-0x400401>
  17:	00 00                	add    BYTE PTR [rax],al
  19:	86 05 40 00 00 00    	xchg   BYTE PTR [rip+0x40],al        # 5f <_init-0x4003b9>
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	6d                   	ins    DWORD PTR es:[rdi],dx
	...
  2a:	00 00                	add    BYTE PTR [rax],al
  2c:	00 02                	add    BYTE PTR [rdx],al
  2e:	08 07                	or     BYTE PTR [rdi],al
  30:	6a 00                	push   0x0
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 01                	add    al,BYTE PTR [rcx]
  36:	08 92 00 00 00 02    	or     BYTE PTR [rdx+0x2000000],dl
  3c:	02 07                	add    al,BYTE PTR [rdi]
  3e:	0b 00                	or     eax,DWORD PTR [rax]
  40:	00 00                	add    BYTE PTR [rax],al
  42:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
  45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  46:	00 00                	add    BYTE PTR [rax],al
  48:	00 02                	add    BYTE PTR [rdx],al
  4a:	01 06                	add    DWORD PTR [rsi],eax
  4c:	94                   	xchg   esp,eax
  4d:	00 00                	add    BYTE PTR [rax],al
  4f:	00 02                	add    BYTE PTR [rdx],al
  51:	02 05 b6 00 00 00    	add    al,BYTE PTR [rip+0xb6]        # 10d <_init-0x40030b>
  57:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
  5e:	02 08                	add    cl,BYTE PTR [rax]
  60:	05 a5 00 00 00       	add    eax,0xa5
  65:	02 08                	add    cl,BYTE PTR [rax]
  67:	07                   	(bad)  
  68:	c0 00 00             	rol    BYTE PTR [rax],0x0
  6b:	00 02                	add    BYTE PTR [rdx],al
  6d:	01 06                	add    DWORD PTR [rsi],eax
  6f:	9b                   	fwait
  70:	00 00                	add    BYTE PTR [rax],al
  72:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 02                	add    BYTE PTR [rdx],al
  79:	28 5e 00             	sub    BYTE PTR [rsi+0x0],bl
  7c:	00 00                	add    BYTE PTR [rax],al
  7e:	05 00 00 00 00       	add    eax,0x0
  83:	01 0a                	add    DWORD PTR [rdx],ecx
  85:	73 00                	jae    87 <_init-0x400391>
  87:	00 00                	add    BYTE PTR [rax],al
  89:	86 05 40 00 00 00    	xchg   BYTE PTR [rip+0x40],al        # cf <_init-0x400349>
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	19 00                	sbb    DWORD PTR [rax],eax
  93:	00 00                	add    BYTE PTR [rax],al
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 00                	add    BYTE PTR [rax],al
  99:	01 9c b8 00 00 00 06 	add    DWORD PTR [rax+rdi*4+0x6000000],ebx
  a0:	61                   	(bad)  
  a1:	00 01                	add    BYTE PTR [rcx],al
  a3:	0a 73 00             	or     dh,BYTE PTR [rbx+0x0]
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	02 91 68 06 62 00    	add    dl,BYTE PTR [rcx+0x620668]
  ae:	01 0a                	add    DWORD PTR [rdx],ecx
  b0:	73 00                	jae    b2 <_init-0x400366>
  b2:	00 00                	add    BYTE PTR [rax],al
  b4:	02 91 60 00 07 a0    	add    dl,BYTE PTR [rcx-0x5ff8ffa0]
  ba:	00 00                	add    BYTE PTR [rax],al
  bc:	00 01                	add    BYTE PTR [rcx],al
  be:	0f 9f 05 40 00 00 00 	setg   BYTE PTR [rip+0x40]        # 105 <_init-0x400313>
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	54                   	push   rsp
  c8:	00 00                	add    BYTE PTR [rax],al
  ca:	00 00                	add    BYTE PTR [rax],al
  cc:	00 00                	add    BYTE PTR [rax],al
  ce:	00 01                	add    BYTE PTR [rcx],al
  d0:	9c                   	pushf  
  d1:	08 73 5f             	or     BYTE PTR [rbx+0x5f],dh
  d4:	63 00                	movsxd eax,DWORD PTR [rax]
  d6:	01 14 73             	add    DWORD PTR [rbx+rsi*2],edx
  d9:	00 00                	add    BYTE PTR [rax],al
  db:	00 02                	add    BYTE PTR [rdx],al
  dd:	91                   	xchg   ecx,eax
  de:	60                   	(bad)  
  df:	09 8c 00 00 00 01 15 	or     DWORD PTR [rax+rax*1+0x15010000],ecx
  e6:	73 00                	jae    e8 <_init-0x400330>
  e8:	00 00                	add    BYTE PTR [rax],al
  ea:	02                   	.byte 0x2
  eb:	91                   	xchg   ecx,eax
  ec:	68                   	.byte 0x68
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x2ab02c6>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	00 00                	add    BYTE PTR [rax],al
  13:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  16:	0b 0b                	or     ecx,DWORD PTR [rbx]
  18:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  1b:	0e                   	(bad)  
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  21:	0b 0b                	or     ecx,DWORD PTR [rbx]
  23:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  26:	08 00                	or     BYTE PTR [rax],al
  28:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
  2b:	00 03                	add    BYTE PTR [rbx],al
  2d:	0e                   	(bad)  
  2e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  30:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  32:	49 13 00             	adc    rax,QWORD PTR [r8]
  35:	00 05 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],al        # 193f0169 <_end+0x18def119>
  3b:	03 0e                	add    ecx,DWORD PTR [rsi]
  3d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  3f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  41:	27                   	(bad)  
  42:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  45:	11 01                	adc    DWORD PTR [rcx],eax
  47:	12 07                	adc    al,BYTE PTR [rdi]
  49:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  50:	00 00                	add    BYTE PTR [rax],al
  52:	06                   	(bad)  
  53:	05 00 03 08 3a       	add    eax,0x3a080300
  58:	0b 3b                	or     edi,DWORD PTR [rbx]
  5a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  5d:	02 18                	add    bl,BYTE PTR [rax]
  5f:	00 00                	add    BYTE PTR [rax],al
  61:	07                   	(bad)  
  62:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
  65:	19 03                	sbb    DWORD PTR [rbx],eax
  67:	0e                   	(bad)  
  68:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  6a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  6c:	11 01                	adc    DWORD PTR [rcx],eax
  6e:	12 07                	adc    al,BYTE PTR [rdi]
  70:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
  77:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
  7a:	03 08                	add    ecx,DWORD PTR [rax]
  7c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  7e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  80:	49 13 02             	adc    rax,QWORD PTR [r10]
  83:	18 00                	sbb    BYTE PTR [rax],al
  85:	00 09                	add    BYTE PTR [rcx],cl
  87:	34 00                	xor    al,0x0
  89:	03 0e                	add    ecx,DWORD PTR [rsi]
  8b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  8d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  8f:	49 13 02             	adc    rax,QWORD PTR [r10]
  92:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	5a                   	pop    rdx
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 36                	add    BYTE PTR [rsi],dh
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0x400387>
  1e:	72 2f                	jb     4f <_init-0x4003c9>
  20:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  27:	00 00                	add    BYTE PTR [rax],al
  29:	6d                   	ins    DWORD PTR es:[rdi],dx
  2a:	61                   	(bad)  
  2b:	69 6e 2e 63 00 00 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x63
  32:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  35:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x100682e
  3c:	01 
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	09 02                	or     DWORD PTR [rdx],eax
  43:	86 05 40 00 00 00    	xchg   BYTE PTR [rip+0x40],al        # 89 <_init-0x40038f>
  49:	00 00                	add    BYTE PTR [rax],al
  4b:	03 09                	add    ecx,DWORD PTR [rcx]
  4d:	01 bb ad 31 83 a2    	add    DWORD PTR [rbx-0x5d7cce53],edi
  53:	08 2f                	or     BYTE PTR [rdi],ch
  55:	08 30                	or     BYTE PTR [rax],dh
  57:	08 92 02 02 00 01    	or     BYTE PTR [rdx+0x1000202],dl
  5d:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	73 75                	jae    77 <_init-0x4003a1>
   2:	6d                   	ins    DWORD PTR es:[rdi],dx
   3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   4:	66 74 77             	data16 je 7e <_init-0x40039a>
   7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   8:	5f                   	pop    rdi
   9:	63 00                	movsxd eax,DWORD PTR [rax]
   b:	73 68                	jae    75 <_init-0x4003a3>
   d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   e:	72 74                	jb     84 <_init-0x400394>
  10:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  13:	73 69                	jae    7e <_init-0x40039a>
  15:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  17:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  1c:	74 00                	je     1e <_init-0x4003fa>
  1e:	47                   	rex.RXB
  1f:	4e 55                	rex.WRX push rbp
  21:	20 43 20             	and    BYTE PTR [rbx+0x20],al
  24:	34 2e                	xor    al,0x2e
  26:	39 2e                	cmp    DWORD PTR [rsi],ebp
  28:	31 20                	xor    DWORD PTR [rax],esp
  2a:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  2f:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  35:	72 69                	jb     a0 <_init-0x400378>
  37:	63 20                	movsxd esp,DWORD PTR [rax]
  39:	2d 6d 61 72 63       	sub    eax,0x6372616d
  3e:	68 3d 78 38 36       	push   0x3638783d
  43:	2d 36 34 20 2d       	sub    eax,0x2d203436
  48:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 617473b5 <_end+0x61146365>
  4f:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
  52:	70 72                	jo     c6 <_init-0x400352>
  54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  55:	74 65                	je     bc <_init-0x40035c>
  57:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  5b:	2d 73 74 72 6f       	sub    eax,0x6f727473
  60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  61:	67 00 6d 61          	add    BYTE PTR [ebp+0x61],ch
  65:	69 6e 2e 63 00 6c 6f 	imul   ebp,DWORD PTR [rsi+0x2e],0x6f6c0063
  6c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  6d:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  71:	73 69                	jae    dc <_init-0x40033c>
  73:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  75:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  7a:	74 00                	je     7c <_init-0x40039c>
  7c:	2f                   	(bad)  
  7d:	68 6f 6d 65 2f       	push   0x2f656d6f
  82:	63 6e 6f             	movsxd ebp,DWORD PTR [rsi+0x6f]
  85:	2f                   	(bad)  
  86:	61                   	(bad)  
  87:	73 6d                	jae    f6 <_init-0x400322>
  89:	2b 63 00             	sub    esp,DWORD PTR [rbx+0x0]
  8c:	73 5f                	jae    ed <_init-0x40032b>
  8e:	61                   	(bad)  
  8f:	73 6d                	jae    fe <_init-0x40031a>
  91:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
  94:	73 69                	jae    ff <_init-0x400319>
  96:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  98:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  9d:	61                   	(bad)  
  9e:	72 00                	jb     a0 <_init-0x400378>
  a0:	6d                   	ins    DWORD PTR es:[rdi],dx
  a1:	61                   	(bad)  
  a2:	69 6e 00 6c 6f 6e 67 	imul   ebp,DWORD PTR [rsi+0x0],0x676e6f6c
  a9:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  ac:	74 00                	je     ae <_init-0x40036a>
  ae:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3436
  b5:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
  b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b9:	72 74                	jb     12f <_init-0x4002e9>
  bb:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  be:	74 00                	je     c0 <_init-0x400358>
  c0:	73 69                	jae    12b <_init-0x4002ed>
  c2:	7a 65                	jp     129 <_init-0x4002ef>
  c4:	74 79                	je     13f <_init-0x4002d9>
  c6:	70 65                	jo     12d <_init-0x4002eb>
	...
Contents of the .eh_frame section:

00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b

  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_undefined: r16 (rip)

00000018 0000000000000014 0000001c FDE cie=00000000 pc=0000000000400490..00000000004004ba
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b

  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000048 0000000000000024 0000001c FDE cie=00000030 pc=0000000000400440..0000000000400490
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 0000000000400446
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 0000000000400450
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 000000000000001c 00000044 FDE cie=00000030 pc=0000000000400586..000000000040059f
  DW_CFA_advance_loc: 1 to 0000000000400587
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 000000000040058a
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 20 to 000000000040059e
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000090 000000000000001c 00000064 FDE cie=00000030 pc=000000000040059f..00000000004005f3
  DW_CFA_advance_loc: 1 to 00000000004005a0
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000004005a3
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc1: 79 to 00000000004005f2
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop

000000b0 0000000000000044 00000084 FDE cie=00000030 pc=0000000000400620..0000000000400685
  DW_CFA_advance_loc: 2 to 0000000000400622
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 5 to 0000000000400627
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 000000000040062c
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 5 to 0000000000400631
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 8 to 0000000000400639
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 0000000000400641
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 13 to 000000000040064e
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 44 to 000000000040067a
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 000000000040067b
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 000000000040067c
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 000000000040067e
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 0000000000400680
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 0000000000400682
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000000000400684
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

000000f8 0000000000000014 000000cc FDE cie=00000030 pc=0000000000400690..0000000000400692
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000110 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    0000000000400586 000000000000006d 
    0000000000000000 0000000000000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0xeb (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0x1e): GNU C 4.9.1 -mtune=generic -march=x86-64 -g -fstack-protector-strong
    <10>   DW_AT_language    : 1	(ANSI C)
    <11>   DW_AT_name        : (indirect string, offset: 0x63): main.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x7c): /home/cno/asm+c
    <19>   DW_AT_low_pc      : 0x400586
    <21>   DW_AT_high_pc     : 0x6d
    <29>   DW_AT_stmt_list   : 0x0
 <1><2d>: Abbrev Number: 2 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 8
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x6a): long unsigned int
 <1><34>: Abbrev Number: 2 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 1
    <36>   DW_AT_encoding    : 8	(unsigned char)
    <37>   DW_AT_name        : (indirect string, offset: 0x92): unsigned char
 <1><3b>: Abbrev Number: 2 (DW_TAG_base_type)
    <3c>   DW_AT_byte_size   : 2
    <3d>   DW_AT_encoding    : 7	(unsigned)
    <3e>   DW_AT_name        : (indirect string, offset: 0xb): short unsigned int
 <1><42>: Abbrev Number: 2 (DW_TAG_base_type)
    <43>   DW_AT_byte_size   : 4
    <44>   DW_AT_encoding    : 7	(unsigned)
    <45>   DW_AT_name        : (indirect string, offset: 0x6f): unsigned int
 <1><49>: Abbrev Number: 2 (DW_TAG_base_type)
    <4a>   DW_AT_byte_size   : 1
    <4b>   DW_AT_encoding    : 6	(signed char)
    <4c>   DW_AT_name        : (indirect string, offset: 0x94): signed char
 <1><50>: Abbrev Number: 2 (DW_TAG_base_type)
    <51>   DW_AT_byte_size   : 2
    <52>   DW_AT_encoding    : 5	(signed)
    <53>   DW_AT_name        : (indirect string, offset: 0xb6): short int
 <1><57>: Abbrev Number: 3 (DW_TAG_base_type)
    <58>   DW_AT_byte_size   : 4
    <59>   DW_AT_encoding    : 5	(signed)
    <5a>   DW_AT_name        : int
 <1><5e>: Abbrev Number: 2 (DW_TAG_base_type)
    <5f>   DW_AT_byte_size   : 8
    <60>   DW_AT_encoding    : 5	(signed)
    <61>   DW_AT_name        : (indirect string, offset: 0xa5): long int
 <1><65>: Abbrev Number: 2 (DW_TAG_base_type)
    <66>   DW_AT_byte_size   : 8
    <67>   DW_AT_encoding    : 7	(unsigned)
    <68>   DW_AT_name        : (indirect string, offset: 0xc0): sizetype
 <1><6c>: Abbrev Number: 2 (DW_TAG_base_type)
    <6d>   DW_AT_byte_size   : 1
    <6e>   DW_AT_encoding    : 6	(signed char)
    <6f>   DW_AT_name        : (indirect string, offset: 0x9b): char
 <1><73>: Abbrev Number: 4 (DW_TAG_typedef)
    <74>   DW_AT_name        : (indirect string, offset: 0xae): int64_t
    <78>   DW_AT_decl_file   : 2
    <79>   DW_AT_decl_line   : 40
    <7a>   DW_AT_type        : <0x5e>
 <1><7e>: Abbrev Number: 5 (DW_TAG_subprogram)
    <7f>   DW_AT_external    : 1
    <7f>   DW_AT_name        : (indirect string, offset: 0x0): sumoftwo_c
    <83>   DW_AT_decl_file   : 1
    <84>   DW_AT_decl_line   : 10
    <85>   DW_AT_prototyped  : 1
    <85>   DW_AT_type        : <0x73>
    <89>   DW_AT_low_pc      : 0x400586
    <91>   DW_AT_high_pc     : 0x19
    <99>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <9b>   DW_AT_GNU_all_call_sites: 1
    <9b>   DW_AT_sibling     : <0xb8>
 <2><9f>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <a0>   DW_AT_name        : a
    <a2>   DW_AT_decl_file   : 1
    <a3>   DW_AT_decl_line   : 10
    <a4>   DW_AT_type        : <0x73>
    <a8>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><ab>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <ac>   DW_AT_name        : b
    <ae>   DW_AT_decl_file   : 1
    <af>   DW_AT_decl_line   : 10
    <b0>   DW_AT_type        : <0x73>
    <b4>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><b7>: Abbrev Number: 0
 <1><b8>: Abbrev Number: 7 (DW_TAG_subprogram)
    <b9>   DW_AT_external    : 1
    <b9>   DW_AT_name        : (indirect string, offset: 0xa0): main
    <bd>   DW_AT_decl_file   : 1
    <be>   DW_AT_decl_line   : 15
    <bf>   DW_AT_low_pc      : 0x40059f
    <c7>   DW_AT_high_pc     : 0x54
    <cf>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <d1>   DW_AT_GNU_all_tail_call_sites: 1
 <2><d1>: Abbrev Number: 8 (DW_TAG_variable)
    <d2>   DW_AT_name        : s_c
    <d6>   DW_AT_decl_file   : 1
    <d7>   DW_AT_decl_line   : 20
    <d8>   DW_AT_type        : <0x73>
    <dc>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><df>: Abbrev Number: 9 (DW_TAG_variable)
    <e0>   DW_AT_name        : (indirect string, offset: 0x8c): s_asm
    <e4>   DW_AT_decl_file   : 1
    <e5>   DW_AT_decl_line   : 21
    <e6>   DW_AT_type        : <0x73>
    <ea>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><ed>: Abbrev Number: 0
 <1><ee>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      90
  DWARF Version:               2
  Prologue Length:             54
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 args
  Opcode 3 has 1 args
  Opcode 4 has 1 args
  Opcode 5 has 1 args
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 args
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 args

 The Directory Table (offset 0x1b):
  1	/usr/include

 The File Name Table (offset 0x29):
  Entry	Dir	Time	Size	Name
  1	0	0	0	main.c
  2	1	0	0	stdint.h

 Line Number Statements:
  [0x00000040]  Extended opcode 2: set Address to 0x400586
  [0x0000004b]  Advance Line by 9 to 10
  [0x0000004d]  Copy
  [0x0000004e]  Special opcode 174: advance Address by 12 to 0x400592 and Line by 1 to 11
  [0x0000004f]  Special opcode 160: advance Address by 11 to 0x40059d and Line by 1 to 12
  [0x00000050]  Special opcode 36: advance Address by 2 to 0x40059f and Line by 3 to 15
  [0x00000051]  Special opcode 118: advance Address by 8 to 0x4005a7 and Line by 1 to 16
  [0x00000052]  Special opcode 149: advance Address by 10 to 0x4005b1 and Line by 4 to 20
  [0x00000053]  Advance PC by constant 17 to 0x4005c2
  [0x00000054]  Special opcode 34: advance Address by 2 to 0x4005c4 and Line by 1 to 21
  [0x00000055]  Advance PC by constant 17 to 0x4005d5
  [0x00000056]  Special opcode 35: advance Address by 2 to 0x4005d7 and Line by 2 to 23
  [0x00000057]  Advance PC by constant 17 to 0x4005e8
  [0x00000058]  Special opcode 133: advance Address by 9 to 0x4005f1 and Line by 2 to 25
  [0x00000059]  Advance PC by 2 to 0x4005f3
  [0x0000005b]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 73756d6f 6674776f 5f630073 686f7274 sumoftwo_c.short
  0x00000010 20756e73 69676e65 6420696e 7400474e  unsigned int.GN
  0x00000020 55204320 342e392e 31202d6d 74756e65 U C 4.9.1 -mtune
  0x00000030 3d67656e 65726963 202d6d61 7263683d =generic -march=
  0x00000040 7838362d 3634202d 67202d66 73746163 x86-64 -g -fstac
  0x00000050 6b2d7072 6f746563 746f722d 7374726f k-protector-stro
  0x00000060 6e67006d 61696e2e 63006c6f 6e672075 ng.main.c.long u
  0x00000070 6e736967 6e656420 696e7400 2f686f6d nsigned int./hom
  0x00000080 652f636e 6f2f6173 6d2b6300 735f6173 e/cno/asm+c.s_as
  0x00000090 6d00756e 7369676e 65642063 68617200 m.unsigned char.
  0x000000a0 6d61696e 006c6f6e 6720696e 7400696e main.long int.in
  0x000000b0 7436345f 74007368 6f727420 696e7400 t64_t.short int.
  0x000000c0 73697a65 74797065 00                sizetype.

